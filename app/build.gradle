apply plugin: 'com.android.application'
import org.apache.tools.ant.taskdefs.condition.Os

String getNdkBuildPath() {
    def ndkDir = project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder()
    if (ndkDir != null) {
        def ndkBuildPath = ndkDir.toString() + '/ndk-build';
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            ndkBuildPath += ".cmd"
        }
//        println "NDK build path: " + ndkBuildPath
        return ndkBuildPath
    }
    return null
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.android.opencv.androidstudio_opencv_readpicture"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"


        ndk {
            moduleName "myjni"
            cFlags "-I/${System.properties['user.home']}/OpenCV-android-sdk-3.1.0/sdk/native/jni/include/" // index header file for jni (can use "Go To Declaration")
            ldLibs "android", "log"
        }

        sourceSets.main {
            jni.srcDirs = [] //disable automatic ndk-build call
            jniLibs.srcDir "src/main/libs"
        }

        task ndkBuild(type: Exec) {
            def ndkBuildPath = getNdkBuildPath()
            commandLine ndkBuildPath, '-C', file('src/main/jni').absolutePath
        }
        tasks.withType(JavaCompile) {
            compileTask -> compileTask.dependsOn ndkBuild
        }

        task ndkClean(type: Exec) {
            def ndkBuildPath = getNdkBuildPath()
            commandLine ndkBuildPath, 'clean', '-C', file('src/main/jni').absolutePath
        }
        clean.dependsOn 'ndkClean'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile project(':openCVLibrary310')
}
